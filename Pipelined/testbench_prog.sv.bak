module testbench_prog();
// Declare inputs as regs and outputs as wires
reg clk;
wire 	taken;
wire 	[3:0] alu_NZCV;
wire 	[7:0] alu_reg1;
wire 	[7:0] alu_reg2;
wire 	[7:0] alu_result;
wire 	[8:0] instr_out;
wire 	[7:0] pc;
// Initialize all variables
// Clock generator
always begin
#5 clk = ~clk; // Toggle clock every 5 ticks
// this makes the clock cycle 10 ticks
end
// the following creates an instance of our program_counter register.

// I copied this code verbatim from the pc_schematic.v that was
// generated by Quartus when I created the .v file from the .bdf.

module pc_schematic (
	.taken(taken),
	.clk(clk),
	.alu_NZCV(alu_NZCV),
	.alu_reg1(alu_reg1),
	.alu_reg2(alu_reg2),
	.alu_result(alu_result),
	.instr_out(instr_out),
	.pc(pc));
endmodule