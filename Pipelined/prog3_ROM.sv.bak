module prog3_ROM(
input wire clk,
input [7:0] pc,


output [8:0] instruction_out
);


reg [8:0] instruction [18:0];


begin initial


instruction[0] = 9'b011001000;//ssb LCAA
instruction[1] = 9'b100100000;//lo 128
instruction[2] = 9'b100000100;//hi 128
instruction[3] = 9'b001001010;//mov $I, $t0


instruction[4] = 9'b100110000;//lo 128+16 $I = 128 ->144
instruction[5] = 9'b001001100;//mov $I, $t2 keeps track of end of array


instruction[6] = 9'b110110010;//tally $t0
instruction[7] = 9'b110100010;//inc $t0
instruction[8] = 9'b000010100;//aro $t0, $t2
instruction[9] = 9'b101111100;//obne -4


instruction[10] = 9'b110111100;//count $t2 count is in t2


instruction[11] = 9'b011010000;//ssb SCAA
instruction[12] = 9'b100111110;//lo 126
instruction[13] = 9'b100000011;//hi 126
instruction[14] = 9'b010001011;//ldst $I, $t1


instruction[15] = 9'b100111111;//lo 127
instruction[16] = 9'b010001100;//ldst st, $I, $t2
instruction[17] = 9'b110111000;//halt
end


always @ (posedge clk)
begin
	instr_out <= instruction[pc[3:0]];
end
endmodule